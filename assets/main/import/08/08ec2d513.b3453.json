[
  [
    {
      "__type__": "cc.SceneAsset",
      "_name": "SceneGraphics",
      "scene": {
        "__id__": 1
      },
      "asyncLoadAssets": null
    },
    {
      "__type__": "cc.Scene",
      "_name": "New Node",
      "_children": [
        {
          "__id__": 2
        }
      ],
      "_anchorPoint": {
        "__type__": "cc.Vec2"
      },
      "_trs": {
        "__type__": "TypedArray",
        "ctor": "Float64Array",
        "array": [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          1
        ]
      }
    },
    {
      "__type__": "cc.Node",
      "_name": "Canvas",
      "_parent": {
        "__id__": 1
      },
      "_children": [
        {
          "__id__": 3
        },
        {
          "__id__": 4
        },
        {
          "__id__": 5
        },
        {
          "__id__": 7
        },
        {
          "__id__": 8
        },
        {
          "__id__": 13
        },
        {
          "__id__": 16
        },
        {
          "__id__": 19
        }
      ],
      "_components": [
        {
          "__type__": "cc.Canvas",
          "node": {
            "__id__": 2
          },
          "_designResolution": {
            "__type__": "cc.Size",
            "width": 720,
            "height": 1280
          },
          "_fitWidth": true
        },
        {
          "__type__": "cc.Widget",
          "node": {
            "__id__": 2
          },
          "_alignFlags": 45
        },
        {
          "__type__": "0ad808M8ylGbooXMchyavso",
          "node": {
            "__id__": 2
          },
          "dragArea": {
            "__id__": 4
          },
          "displayArea": {
            "__id__": 5
          },
          "light": {
            "__id__": 7
          },
          "ctx": {
            "__id__": 6
          },
          "materials": [
            {
              "__uuid__": "69kQaAjS1O/pw8vpkA8OdP"
            },
            {
              "__uuid__": "a0iOEXVAVN45Qkblfv4mR/"
            },
            {
              "__uuid__": "76jy+JYZNAm4esaHGYf+zR"
            },
            {
              "__uuid__": "ff5AODF1NIBY+6ZST44dSf"
            },
            {
              "__uuid__": "7caRGNuYlM1bLPcZZkDXko"
            },
            {
              "__uuid__": "2akW5pmjJET5GQ82turjjx"
            },
            {
              "__uuid__": "c1CEoYu0lCP6i0BvdYukS9"
            }
          ]
        }
      ],
      "_contentSize": {
        "__type__": "cc.Size",
        "width": 720,
        "height": 1280
      },
      "_trs": {
        "__type__": "TypedArray",
        "ctor": "Float64Array",
        "array": [
          360,
          640,
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          1
        ]
      },
      "_id": "a5esZu+45LA5mBpvttspPD"
    },
    {
      "__type__": "cc.Node",
      "_name": "Main Camera",
      "_parent": {
        "__id__": 2
      },
      "_components": [
        {
          "__type__": "cc.Camera",
          "node": {
            "__id__": 3
          },
          "_clearFlags": 7,
          "_depth": -1
        }
      ],
      "_contentSize": {
        "__type__": "cc.Size",
        "width": 720,
        "height": 1280
      },
      "_trs": {
        "__type__": "TypedArray",
        "ctor": "Float64Array",
        "array": [
          0,
          0,
          723.3928592393968,
          0,
          0,
          0,
          1,
          1,
          1,
          1
        ]
      }
    },
    {
      "__type__": "cc.Node",
      "_name": "bg",
      "_parent": {
        "__id__": 2
      },
      "_components": [
        {
          "__type__": "cc.Sprite",
          "node": {
            "__id__": 4
          },
          "_materials": [
            {
              "__uuid__": "ecpdLyjvZBwrvm+cedCcQy"
            }
          ],
          "_spriteFrame": {
            "__uuid__": "d1NC9cMO9JcbNgyq83PkQJ"
          },
          "_sizeMode": 0
        },
        {
          "__type__": "cc.Widget",
          "node": {
            "__id__": 4
          },
          "_alignFlags": 45,
          "_originalWidth": 100,
          "_originalHeight": 100
        }
      ],
      "_color": {
        "__type__": "cc.Color"
      },
      "_contentSize": {
        "__type__": "cc.Size",
        "width": 720,
        "height": 1280
      },
      "_trs": {
        "__type__": "TypedArray",
        "ctor": "Float64Array",
        "array": [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          1
        ]
      }
    },
    {
      "__type__": "cc.Node",
      "_name": "graphics",
      "_parent": {
        "__id__": 2
      },
      "_components": [
        {
          "__id__": 6
        }
      ],
      "_trs": {
        "__type__": "TypedArray",
        "ctor": "Float64Array",
        "array": [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          1
        ]
      }
    },
    {
      "__type__": "cc.Graphics",
      "node": {
        "__id__": 5
      },
      "_materials": [
        {
          "__uuid__": "7caRGNuYlM1bLPcZZkDXko"
        }
      ],
      "_strokeColor": {
        "__type__": "cc.Color",
        "r": 255,
        "g": 255,
        "b": 255
      }
    },
    {
      "__type__": "cc.Node",
      "_name": "light",
      "_parent": {
        "__id__": 2
      },
      "_components": [
        {
          "__type__": "cc.Sprite",
          "node": {
            "__id__": 7
          },
          "_materials": [
            {
              "__uuid__": "ecpdLyjvZBwrvm+cedCcQy"
            }
          ],
          "_spriteFrame": {
            "__uuid__": "e9oVsgKiBKH5LjeZ4lPGNM"
          }
        },
        {
          "__type__": "89871MxfkBJjJh0o236XNDC",
          "node": {
            "__id__": 7
          }
        }
      ],
      "_contentSize": {
        "__type__": "cc.Size",
        "width": 35,
        "height": 57
      },
      "_trs": {
        "__type__": "TypedArray",
        "ctor": "Float64Array",
        "array": [
          269.589,
          -497.413,
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          1
        ]
      }
    },
    {
      "__type__": "cc.Node",
      "_name": "ctrl",
      "_parent": {
        "__id__": 2
      },
      "_children": [
        {
          "__id__": 9
        },
        {
          "__id__": 10
        },
        {
          "__id__": 11
        },
        {
          "__id__": 12
        }
      ],
      "_active": false,
      "_trs": {
        "__type__": "TypedArray",
        "ctor": "Float64Array",
        "array": [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          1
        ]
      }
    },
    {
      "__type__": "cc.Node",
      "_name": "c1",
      "_parent": {
        "__id__": 8
      },
      "_components": [
        {
          "__type__": "cc.Sprite",
          "node": {
            "__id__": 9
          },
          "_materials": [
            {
              "__uuid__": "ecpdLyjvZBwrvm+cedCcQy"
            }
          ],
          "_spriteFrame": {
            "__uuid__": "a2MjXRFdtLlYQ5ouAFv/+R"
          },
          "_sizeMode": 0
        },
        {
          "__type__": "89871MxfkBJjJh0o236XNDC",
          "node": {
            "__id__": 9
          }
        }
      ],
      "_contentSize": {
        "__type__": "cc.Size",
        "width": 100,
        "height": 100
      },
      "_trs": {
        "__type__": "TypedArray",
        "ctor": "Float64Array",
        "array": [
          -206.459,
          -43.55,
          0,
          0,
          0,
          0,
          1,
          0.2,
          0.2,
          1
        ]
      }
    },
    {
      "__type__": "cc.Node",
      "_name": "c2",
      "_parent": {
        "__id__": 8
      },
      "_components": [
        {
          "__type__": "cc.Sprite",
          "node": {
            "__id__": 10
          },
          "_materials": [
            {
              "__uuid__": "ecpdLyjvZBwrvm+cedCcQy"
            }
          ],
          "_spriteFrame": {
            "__uuid__": "a2MjXRFdtLlYQ5ouAFv/+R"
          },
          "_sizeMode": 0
        },
        {
          "__type__": "89871MxfkBJjJh0o236XNDC",
          "node": {
            "__id__": 10
          }
        }
      ],
      "_contentSize": {
        "__type__": "cc.Size",
        "width": 100,
        "height": 100
      },
      "_trs": {
        "__type__": "TypedArray",
        "ctor": "Float64Array",
        "array": [
          -117.746,
          109.681,
          0,
          0,
          0,
          0,
          1,
          0.2,
          0.2,
          1
        ]
      }
    },
    {
      "__type__": "cc.Node",
      "_name": "c3",
      "_parent": {
        "__id__": 8
      },
      "_components": [
        {
          "__type__": "cc.Sprite",
          "node": {
            "__id__": 11
          },
          "_materials": [
            {
              "__uuid__": "ecpdLyjvZBwrvm+cedCcQy"
            }
          ],
          "_spriteFrame": {
            "__uuid__": "a2MjXRFdtLlYQ5ouAFv/+R"
          },
          "_sizeMode": 0
        },
        {
          "__type__": "89871MxfkBJjJh0o236XNDC",
          "node": {
            "__id__": 11
          }
        }
      ],
      "_contentSize": {
        "__type__": "cc.Size",
        "width": 100,
        "height": 100
      },
      "_trs": {
        "__type__": "TypedArray",
        "ctor": "Float64Array",
        "array": [
          19.355,
          162.909,
          0,
          0,
          0,
          0,
          1,
          0.2,
          0.2,
          1
        ]
      }
    },
    {
      "__type__": "cc.Node",
      "_name": "c4",
      "_parent": {
        "__id__": 8
      },
      "_components": [
        {
          "__type__": "cc.Sprite",
          "node": {
            "__id__": 12
          },
          "_materials": [
            {
              "__uuid__": "ecpdLyjvZBwrvm+cedCcQy"
            }
          ],
          "_spriteFrame": {
            "__uuid__": "a2MjXRFdtLlYQ5ouAFv/+R"
          },
          "_sizeMode": 0
        },
        {
          "__type__": "89871MxfkBJjJh0o236XNDC",
          "node": {
            "__id__": 12
          }
        }
      ],
      "_contentSize": {
        "__type__": "cc.Size",
        "width": 100,
        "height": 100
      },
      "_trs": {
        "__type__": "TypedArray",
        "ctor": "Float64Array",
        "array": [
          187.103,
          6.452,
          0,
          0,
          0,
          0,
          1,
          0.2,
          0.2,
          1
        ]
      }
    },
    {
      "__type__": "cc.Node",
      "_name": "btnSwitchGraph",
      "_parent": {
        "__id__": 2
      },
      "_children": [
        {
          "__id__": 14
        }
      ],
      "_components": [
        {
          "__type__": "cc.Button",
          "node": {
            "__id__": 13
          },
          "clickEvents": [
            {
              "__type__": "cc.ClickEvent",
              "target": {
                "__id__": 2
              },
              "_componentId": "0ad808M8ylGbooXMchyavso",
              "handler": "NextGraph"
            }
          ],
          "_N$transition": 2,
          "transition": 2,
          "_N$normalColor": {
            "__type__": "cc.Color",
            "r": 230,
            "g": 230,
            "b": 230
          },
          "_N$pressedColor": {
            "__type__": "cc.Color",
            "r": 200,
            "g": 200,
            "b": 200
          },
          "pressedColor": {
            "__type__": "cc.Color",
            "r": 200,
            "g": 200,
            "b": 200
          },
          "_N$disabledColor": {
            "__type__": "cc.Color",
            "r": 120,
            "g": 120,
            "b": 120,
            "a": 200
          },
          "_N$normalSprite": {
            "__uuid__": "f0BIwQ8D5Ml7nTNQbh1YlS"
          },
          "_N$pressedSprite": {
            "__uuid__": "e97GVMl6JHh5Ml5qEDdSGa"
          },
          "pressedSprite": {
            "__uuid__": "e97GVMl6JHh5Ml5qEDdSGa"
          },
          "_N$hoverSprite": {
            "__uuid__": "f0BIwQ8D5Ml7nTNQbh1YlS"
          },
          "hoverSprite": {
            "__uuid__": "f0BIwQ8D5Ml7nTNQbh1YlS"
          },
          "_N$disabledSprite": {
            "__uuid__": "29FYIk+N1GYaeWH/q1NxQO"
          },
          "_N$target": {
            "__id__": 14
          }
        }
      ],
      "_contentSize": {
        "__type__": "cc.Size",
        "width": 100,
        "height": 40
      },
      "_trs": {
        "__type__": "TypedArray",
        "ctor": "Float64Array",
        "array": [
          -123.689,
          -387.497,
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          1
        ]
      }
    },
    {
      "__type__": "cc.Node",
      "_name": "Background",
      "_objFlags": 512,
      "_parent": {
        "__id__": 13
      },
      "_children": [
        {
          "__id__": 15
        }
      ],
      "_components": [
        {
          "__type__": "cc.Sprite",
          "node": {
            "__id__": 14
          },
          "_materials": [
            {
              "__uuid__": "ecpdLyjvZBwrvm+cedCcQy"
            }
          ],
          "_spriteFrame": {
            "__uuid__": "f0BIwQ8D5Ml7nTNQbh1YlS"
          },
          "_type": 1,
          "_sizeMode": 0
        },
        {
          "__type__": "cc.Widget",
          "node": {
            "__id__": 14
          },
          "alignMode": 0,
          "_alignFlags": 45,
          "_originalWidth": 100,
          "_originalHeight": 40
        }
      ],
      "_contentSize": {
        "__type__": "cc.Size",
        "width": 100,
        "height": 40
      },
      "_trs": {
        "__type__": "TypedArray",
        "ctor": "Float64Array",
        "array": [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          1
        ]
      }
    },
    {
      "__type__": "cc.Node",
      "_name": "Label",
      "_objFlags": 512,
      "_parent": {
        "__id__": 14
      },
      "_components": [
        {
          "__type__": "cc.Label",
          "node": {
            "__id__": 15
          },
          "_materials": [
            {
              "__uuid__": "ecpdLyjvZBwrvm+cedCcQy"
            }
          ],
          "_useOriginalSize": false,
          "_string": "切路径",
          "_N$string": "切路径",
          "_fontSize": 20,
          "_enableWrapText": false,
          "_N$horizontalAlign": 1,
          "_N$verticalAlign": 1,
          "_N$overflow": 1,
          "_N$cacheMode": 1
        }
      ],
      "_color": {
        "__type__": "cc.Color"
      },
      "_contentSize": {
        "__type__": "cc.Size",
        "width": 100,
        "height": 40
      },
      "_trs": {
        "__type__": "TypedArray",
        "ctor": "Float64Array",
        "array": [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          1
        ]
      }
    },
    {
      "__type__": "cc.Node",
      "_name": "btnSwitchEffect",
      "_parent": {
        "__id__": 2
      },
      "_children": [
        {
          "__id__": 17
        }
      ],
      "_components": [
        {
          "__type__": "cc.Button",
          "node": {
            "__id__": 16
          },
          "clickEvents": [
            {
              "__type__": "cc.ClickEvent",
              "target": {
                "__id__": 2
              },
              "_componentId": "0ad808M8ylGbooXMchyavso",
              "handler": "NextEffect"
            }
          ],
          "_N$transition": 2,
          "transition": 2,
          "_N$normalColor": {
            "__type__": "cc.Color",
            "r": 230,
            "g": 230,
            "b": 230
          },
          "_N$pressedColor": {
            "__type__": "cc.Color",
            "r": 200,
            "g": 200,
            "b": 200
          },
          "pressedColor": {
            "__type__": "cc.Color",
            "r": 200,
            "g": 200,
            "b": 200
          },
          "_N$disabledColor": {
            "__type__": "cc.Color",
            "r": 120,
            "g": 120,
            "b": 120,
            "a": 200
          },
          "_N$normalSprite": {
            "__uuid__": "f0BIwQ8D5Ml7nTNQbh1YlS"
          },
          "_N$pressedSprite": {
            "__uuid__": "e97GVMl6JHh5Ml5qEDdSGa"
          },
          "pressedSprite": {
            "__uuid__": "e97GVMl6JHh5Ml5qEDdSGa"
          },
          "_N$hoverSprite": {
            "__uuid__": "f0BIwQ8D5Ml7nTNQbh1YlS"
          },
          "hoverSprite": {
            "__uuid__": "f0BIwQ8D5Ml7nTNQbh1YlS"
          },
          "_N$disabledSprite": {
            "__uuid__": "29FYIk+N1GYaeWH/q1NxQO"
          },
          "_N$target": {
            "__id__": 17
          }
        }
      ],
      "_contentSize": {
        "__type__": "cc.Size",
        "width": 100,
        "height": 40
      },
      "_trs": {
        "__type__": "TypedArray",
        "ctor": "Float64Array",
        "array": [
          97.8,
          -387.497,
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          1
        ]
      }
    },
    {
      "__type__": "cc.Node",
      "_name": "Background",
      "_objFlags": 512,
      "_parent": {
        "__id__": 16
      },
      "_children": [
        {
          "__id__": 18
        }
      ],
      "_components": [
        {
          "__type__": "cc.Sprite",
          "node": {
            "__id__": 17
          },
          "_materials": [
            {
              "__uuid__": "ecpdLyjvZBwrvm+cedCcQy"
            }
          ],
          "_spriteFrame": {
            "__uuid__": "f0BIwQ8D5Ml7nTNQbh1YlS"
          },
          "_type": 1,
          "_sizeMode": 0
        },
        {
          "__type__": "cc.Widget",
          "node": {
            "__id__": 17
          },
          "alignMode": 0,
          "_alignFlags": 45,
          "_originalWidth": 100,
          "_originalHeight": 40
        }
      ],
      "_contentSize": {
        "__type__": "cc.Size",
        "width": 100,
        "height": 40
      },
      "_trs": {
        "__type__": "TypedArray",
        "ctor": "Float64Array",
        "array": [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          1
        ]
      }
    },
    {
      "__type__": "cc.Node",
      "_name": "Label",
      "_objFlags": 512,
      "_parent": {
        "__id__": 17
      },
      "_components": [
        {
          "__type__": "cc.Label",
          "node": {
            "__id__": 18
          },
          "_materials": [
            {
              "__uuid__": "ecpdLyjvZBwrvm+cedCcQy"
            }
          ],
          "_useOriginalSize": false,
          "_string": "切效果",
          "_N$string": "切效果",
          "_fontSize": 20,
          "_enableWrapText": false,
          "_N$horizontalAlign": 1,
          "_N$verticalAlign": 1,
          "_N$overflow": 1,
          "_N$cacheMode": 1
        }
      ],
      "_color": {
        "__type__": "cc.Color"
      },
      "_contentSize": {
        "__type__": "cc.Size",
        "width": 100,
        "height": 40
      },
      "_trs": {
        "__type__": "TypedArray",
        "ctor": "Float64Array",
        "array": [
          0,
          0,
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          1
        ]
      }
    },
    {
      "__type__": "cc.Node",
      "_name": "hintLabel",
      "_parent": {
        "__id__": 2
      },
      "_components": [
        {
          "__type__": "cc.Label",
          "node": {
            "__id__": 19
          },
          "_materials": [
            {
              "__uuid__": "ecpdLyjvZBwrvm+cedCcQy"
            }
          ],
          "_useOriginalSize": false,
          "_string": "Drag & Scale",
          "_N$string": "Drag & Scale",
          "_fontSize": 32,
          "_N$horizontalAlign": 1,
          "_N$verticalAlign": 1,
          "_N$cacheMode": 1
        }
      ],
      "_contentSize": {
        "__type__": "cc.Size",
        "width": 188.53,
        "height": 50.4
      },
      "_trs": {
        "__type__": "TypedArray",
        "ctor": "Float64Array",
        "array": [
          -14.94,
          -508.577,
          0,
          0,
          0,
          0,
          1,
          1,
          1,
          1
        ]
      }
    }
  ],
  {
    "__type__": "cc.SpriteFrame",
    "content": {
      "name": "default_btn_disabled",
      "texture": "71VhFCTINJM6/Ky3oX9nBT",
      "rect": [
        0,
        0,
        40,
        40
      ],
      "offset": [
        0,
        0
      ],
      "originalSize": [
        40,
        40
      ],
      "capInsets": [
        12,
        12,
        12,
        12
      ]
    }
  },
  {
    "__type__": "cc.Material",
    "_name": "GraphicsFake3D",
    "_effectAsset": {
      "__uuid__": "eeMLBXtr9IAp6wSqxy8xrA"
    },
    "_techniqueData": {
      "0": {
        "defines": {}
      }
    }
  },
  {
    "__type__": "cc.EffectAsset",
    "_name": "GraphicsTexture",
    "techniques": [
      {
        "passes": [
          {
            "blendState": {
              "targets": [
                {
                  "blend": true,
                  "blendSrc": 1,
                  "blendDst": 771,
                  "blendSrcAlpha": 1,
                  "blendDstAlpha": 771
                }
              ]
            },
            "rasterizerState": {
              "cullMode": 0
            },
            "properties": {
              "texture": {
                "value": "white",
                "type": 29
              },
              "alphaThreshold": {
                "value": [
                  0.5
                ],
                "type": 13
              }
            },
            "program": "GraphicsTexture|vs|fs"
          }
        ]
      }
    ],
    "shaders": [
      {
        "hash": 3715727231,
        "glsl3": {
          "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\nin float a_dist;\nout float v_dist;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * cc_matWorld * pos;\n  v_color = a_color;\n  v_dist = a_dist;\n  gl_Position = pos;\n}",
          "frag": "\n#if CC_SUPPORT_standard_derivatives\n  #extension GL_OES_standard_derivatives : enable\n#endif\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nin vec4 v_color;\nin float v_dist;\nuniform sampler2D texture;\nvoid main () {\n  vec4 o = v_color;\n  ALPHA_TEST(o);\n  #if CC_SUPPORT_standard_derivatives\n    float aa = fwidth(v_dist);\n  #else\n    float aa = 0.05;\n  #endif\n  float alpha = smoothstep(aa, -aa, abs(v_dist) - 1.0);\n  float D = v_dist * 0.5 + 0.5;\n  o = texture2D(texture, vec2(D, 0.5));\n  o.rgb *= alpha;\n  gl_FragColor = o;\n}"
        },
        "glsl1": {
          "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\nattribute float a_dist;\nvarying float v_dist;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * cc_matWorld * pos;\n  v_color = a_color;\n  v_dist = a_dist;\n  gl_Position = pos;\n}",
          "frag": "\n#if CC_SUPPORT_standard_derivatives\n  #extension GL_OES_standard_derivatives : enable\n#endif\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nvarying vec4 v_color;\nvarying float v_dist;\nuniform sampler2D texture;\nvoid main () {\n  vec4 o = v_color;\n  ALPHA_TEST(o);\n  #if CC_SUPPORT_standard_derivatives\n    float aa = fwidth(v_dist);\n  #else\n    float aa = 0.05;\n  #endif\n  float alpha = smoothstep(aa, -aa, abs(v_dist) - 1.0);\n  float D = v_dist * 0.5 + 0.5;\n  o = texture2D(texture, vec2(D, 0.5));\n  o.rgb *= alpha;\n  gl_FragColor = o;\n}"
        },
        "builtins": {
          "globals": {
            "blocks": [
              {
                "name": "CCGlobal",
                "defines": []
              }
            ],
            "samplers": []
          },
          "locals": {
            "blocks": [
              {
                "name": "CCLocal",
                "defines": []
              }
            ],
            "samplers": []
          }
        },
        "defines": [
          {
            "name": "CC_SUPPORT_standard_derivatives",
            "type": "boolean",
            "defines": []
          },
          {
            "name": "USE_ALPHA_TEST",
            "type": "boolean",
            "defines": []
          }
        ],
        "blocks": [
          {
            "name": "ALPHA_TEST",
            "members": [
              {
                "name": "alphaThreshold",
                "type": 13,
                "count": 1
              }
            ],
            "defines": [
              "USE_ALPHA_TEST"
            ],
            "binding": 0
          }
        ],
        "samplers": [
          {
            "name": "texture",
            "type": 29,
            "count": 1,
            "defines": [],
            "binding": 30
          }
        ],
        "record": null,
        "name": "GraphicsTexture|vs|fs"
      }
    ]
  },
  {
    "__type__": "cc.Material",
    "_name": "Builtin2DGraphics",
    "_effectAsset": {
      "__uuid__": "8dou93mChC3IuJ9oDgkeXw"
    },
    "_techniqueData": {
      "0": {
        "defines": {}
      }
    }
  },
  {
    "__type__": "cc.Material",
    "_name": "GraphicsTexture",
    "_effectAsset": {
      "__uuid__": "33wcTBss1LCZqo13OTT69G"
    },
    "_techniqueData": {
      "0": {
        "defines": {},
        "props": {
          "texture": {
            "__uuid__": "1cFqPUt3FPR7VUtcqr/dkX"
          }
        }
      }
    }
  },
  {
    "__type__": "cc.EffectAsset",
    "_name": "GraphicsShowMesh",
    "techniques": [
      {
        "passes": [
          {
            "blendState": {
              "targets": [
                {
                  "blend": true,
                  "blendSrc": 1,
                  "blendDst": 771,
                  "blendSrcAlpha": 1,
                  "blendDstAlpha": 771
                }
              ]
            },
            "rasterizerState": {
              "cullMode": 0
            },
            "properties": {
              "alphaThreshold": {
                "value": [
                  0.5
                ],
                "type": 13
              }
            },
            "program": "GraphicsShowMesh|vs|fs"
          }
        ]
      }
    ],
    "shaders": [
      {
        "hash": 3410332079,
        "glsl3": {
          "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin float a_index;\nout float v_index;\nout vec4 v_lineFlags;\nin float a_dist;\nout float v_dist;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * cc_matWorld * pos;\n  v_index = a_index;\n  v_lineFlags.x = floor(a_index * 0.5);\n  v_lineFlags.y = floor((a_index + 1.) * 0.5);\n  v_dist = a_dist;\n  gl_Position = pos;\n}",
          "frag": "\n  #if CC_SUPPORT_standard_derivatives\n    #extension GL_OES_standard_derivatives : enable\n  #endif\n  precision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\n  in float v_index;\n  in vec4 v_lineFlags;\n  in float v_dist;\n  float Remap01(float a, float b, float t) {\n    return (t-a) / (b-a);\n  }\n  float Remap(float a, float b, float c, float d, float t) {\n    return Remap01(a, b, t) * (d-c) + c;\n  }\n  float Pulse(float x) {\n    return pow(4.0 * x * (1.0 - x), 16.0);\n  }\n  void main () {\n    #if CC_SUPPORT_standard_derivatives\n      float aa = fwidth(v_dist);\n    #else\n      float aa = 0.05;\n    #endif\n    vec2 ff = fract(v_lineFlags.xy);\n    float green = min(ff.x, ff.y);\n    green = 0.3 + min(green, 0.7);\n    gl_FragColor = vec4(0., green, 0., 1.0);\n  }"
        },
        "glsl1": {
          "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute float a_index;\nvarying float v_index;\nvarying vec4 v_lineFlags;\nattribute float a_dist;\nvarying float v_dist;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * cc_matWorld * pos;\n  v_index = a_index;\n  v_lineFlags.x = floor(a_index * 0.5);\n  v_lineFlags.y = floor((a_index + 1.) * 0.5);\n  v_dist = a_dist;\n  gl_Position = pos;\n}",
          "frag": "\n  #if CC_SUPPORT_standard_derivatives\n    #extension GL_OES_standard_derivatives : enable\n  #endif\n  precision highp float;\nuniform vec4 cc_time;\n#if USE_ALPHA_TEST\n#endif\n  varying float v_index;\n  varying vec4 v_lineFlags;\n  varying float v_dist;\n  float Remap01(float a, float b, float t) {\n    return (t-a) / (b-a);\n  }\n  float Remap(float a, float b, float c, float d, float t) {\n    return Remap01(a, b, t) * (d-c) + c;\n  }\n  float Pulse(float x) {\n    return pow(4.0 * x * (1.0 - x), 16.0);\n  }\n  void main () {\n    #if CC_SUPPORT_standard_derivatives\n      float aa = fwidth(v_dist);\n    #else\n      float aa = 0.05;\n    #endif\n    vec2 ff = fract(v_lineFlags.xy);\n    float green = min(ff.x, ff.y);\n    green = 0.3 + min(green, 0.7);\n    gl_FragColor = vec4(0., green, 0., 1.0);\n  }"
        },
        "builtins": {
          "globals": {
            "blocks": [
              {
                "name": "CCGlobal",
                "defines": []
              }
            ],
            "samplers": []
          },
          "locals": {
            "blocks": [
              {
                "name": "CCLocal",
                "defines": []
              }
            ],
            "samplers": []
          }
        },
        "defines": [
          {
            "name": "CC_SUPPORT_standard_derivatives",
            "type": "boolean",
            "defines": []
          },
          {
            "name": "USE_ALPHA_TEST",
            "type": "boolean",
            "defines": []
          }
        ],
        "blocks": [
          {
            "name": "ALPHA_TEST",
            "members": [
              {
                "name": "alphaThreshold",
                "type": 13,
                "count": 1
              }
            ],
            "defines": [
              "USE_ALPHA_TEST"
            ],
            "binding": 0
          }
        ],
        "samplers": [],
        "record": null,
        "name": "GraphicsShowMesh|vs|fs"
      }
    ]
  },
  {
    "__type__": "cc.EffectAsset",
    "_name": "Builtin2DGraphics",
    "techniques": [
      {
        "passes": [
          {
            "blendState": {
              "targets": [
                {
                  "blend": true,
                  "blendSrc": 1,
                  "blendDst": 771,
                  "blendSrcAlpha": 1,
                  "blendDstAlpha": 771
                }
              ]
            },
            "rasterizerState": {
              "cullMode": 0
            },
            "properties": {
              "alphaThreshold": {
                "value": [
                  0.5
                ],
                "type": 13
              }
            },
            "program": "Builtin2DGraphics|vs|fs"
          }
        ]
      }
    ],
    "shaders": [
      {
        "hash": 550349795,
        "glsl3": {
          "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\nin float a_dist;\nout float v_dist;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * cc_matWorld * pos;\n  v_color = a_color;\n  v_dist = a_dist;\n  gl_Position = pos;\n}",
          "frag": "\n#if CC_SUPPORT_standard_derivatives\n  #extension GL_OES_standard_derivatives : enable\n#endif\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nin vec4 v_color;\nin float v_dist;\nvoid main () {\n  vec4 o = v_color;\n  ALPHA_TEST(o);\n  #if CC_SUPPORT_standard_derivatives\n    float aa = fwidth(v_dist);\n  #else\n    float aa = 0.05;\n  #endif\n  float alpha = 1. - smoothstep(-aa, 0., abs(v_dist) - 1.0);\n  o.rgb *= o.a;\n  o *= alpha;\n  gl_FragColor = o;\n}"
        },
        "glsl1": {
          "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\nattribute float a_dist;\nvarying float v_dist;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * cc_matWorld * pos;\n  v_color = a_color;\n  v_dist = a_dist;\n  gl_Position = pos;\n}",
          "frag": "\n#if CC_SUPPORT_standard_derivatives\n  #extension GL_OES_standard_derivatives : enable\n#endif\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nvarying vec4 v_color;\nvarying float v_dist;\nvoid main () {\n  vec4 o = v_color;\n  ALPHA_TEST(o);\n  #if CC_SUPPORT_standard_derivatives\n    float aa = fwidth(v_dist);\n  #else\n    float aa = 0.05;\n  #endif\n  float alpha = 1. - smoothstep(-aa, 0., abs(v_dist) - 1.0);\n  o.rgb *= o.a;\n  o *= alpha;\n  gl_FragColor = o;\n}"
        },
        "builtins": {
          "globals": {
            "blocks": [
              {
                "name": "CCGlobal",
                "defines": []
              }
            ],
            "samplers": []
          },
          "locals": {
            "blocks": [
              {
                "name": "CCLocal",
                "defines": []
              }
            ],
            "samplers": []
          }
        },
        "defines": [
          {
            "name": "CC_SUPPORT_standard_derivatives",
            "type": "boolean",
            "defines": []
          },
          {
            "name": "USE_ALPHA_TEST",
            "type": "boolean",
            "defines": []
          }
        ],
        "blocks": [
          {
            "name": "ALPHA_TEST",
            "members": [
              {
                "name": "alphaThreshold",
                "type": 13,
                "count": 1
              }
            ],
            "defines": [
              "USE_ALPHA_TEST"
            ],
            "binding": 0
          }
        ],
        "samplers": [],
        "record": null,
        "name": "Builtin2DGraphics|vs|fs"
      }
    ]
  },
  {
    "__type__": "cc.Material",
    "_name": "GraphicsShowVDist",
    "_effectAsset": {
      "__uuid__": "a8MJqhc/1NEprLtyJRPdiV"
    },
    "_techniqueData": {
      "0": {
        "defines": {}
      }
    }
  },
  {
    "__type__": "cc.SpriteFrame",
    "content": {
      "name": "default_sprite_splash",
      "texture": "02delMVqdBD70a/HSD99FK",
      "rect": [
        0,
        0,
        2,
        2
      ],
      "offset": [
        0,
        0
      ],
      "originalSize": [
        2,
        2
      ],
      "capInsets": [
        0,
        0,
        0,
        0
      ]
    }
  },
  {
    "__type__": "cc.EffectAsset",
    "_name": "GraphicsShowVDist",
    "techniques": [
      {
        "passes": [
          {
            "blendState": {
              "targets": [
                {
                  "blend": true,
                  "blendSrc": 1,
                  "blendDst": 771,
                  "blendSrcAlpha": 1,
                  "blendDstAlpha": 771
                }
              ]
            },
            "rasterizerState": {
              "cullMode": 0
            },
            "properties": {
              "alphaThreshold": {
                "value": [
                  0.5
                ],
                "type": 13
              }
            },
            "program": "GraphicsShowVDist|vs|fs"
          }
        ]
      }
    ],
    "shaders": [
      {
        "hash": 3253050703,
        "glsl3": {
          "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\nin float a_dist;\nout float v_dist;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * cc_matWorld * pos;\n  v_color = a_color;\n  v_dist = a_dist;\n  gl_Position = pos;\n}",
          "frag": "\n#if CC_SUPPORT_standard_derivatives\n  #extension GL_OES_standard_derivatives : enable\n#endif\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nin vec4 v_color;\nin float v_dist;\nvoid main () {\n  gl_FragColor = vec4(abs(v_dist));\n}"
        },
        "glsl1": {
          "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\nattribute float a_dist;\nvarying float v_dist;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * cc_matWorld * pos;\n  v_color = a_color;\n  v_dist = a_dist;\n  gl_Position = pos;\n}",
          "frag": "\n#if CC_SUPPORT_standard_derivatives\n  #extension GL_OES_standard_derivatives : enable\n#endif\nprecision highp float;\n#if USE_ALPHA_TEST\n#endif\nvarying vec4 v_color;\nvarying float v_dist;\nvoid main () {\n  gl_FragColor = vec4(abs(v_dist));\n}"
        },
        "builtins": {
          "globals": {
            "blocks": [
              {
                "name": "CCGlobal",
                "defines": []
              }
            ],
            "samplers": []
          },
          "locals": {
            "blocks": [
              {
                "name": "CCLocal",
                "defines": []
              }
            ],
            "samplers": []
          }
        },
        "defines": [
          {
            "name": "CC_SUPPORT_standard_derivatives",
            "type": "boolean",
            "defines": []
          },
          {
            "name": "USE_ALPHA_TEST",
            "type": "boolean",
            "defines": []
          }
        ],
        "blocks": [
          {
            "name": "ALPHA_TEST",
            "members": [
              {
                "name": "alphaThreshold",
                "type": 13,
                "count": 1
              }
            ],
            "defines": [
              "USE_ALPHA_TEST"
            ],
            "binding": 0
          }
        ],
        "samplers": [],
        "record": null,
        "name": "GraphicsShowVDist|vs|fs"
      }
    ]
  },
  {
    "__type__": "cc.Material",
    "_name": "GraphicsShowMesh",
    "_effectAsset": {
      "__uuid__": "86gQQAeVZBZrSHCp14HVCw"
    },
    "_techniqueData": {
      "0": {
        "defines": {}
      }
    }
  },
  {
    "__type__": "cc.SpriteFrame",
    "content": {
      "name": "singleColor_unpackable",
      "texture": "79C8YJ7jRBnZC3oX32MH83",
      "rect": [
        0,
        0,
        2,
        2
      ],
      "offset": [
        0,
        0
      ],
      "originalSize": [
        2,
        2
      ],
      "capInsets": [
        0,
        0,
        0,
        0
      ]
    }
  },
  {
    "__type__": "cc.EffectAsset",
    "_name": "GraphicsRainbow",
    "techniques": [
      {
        "passes": [
          {
            "blendState": {
              "targets": [
                {
                  "blend": true,
                  "blendSrc": 1,
                  "blendDst": 771,
                  "blendSrcAlpha": 1,
                  "blendDstAlpha": 771
                }
              ]
            },
            "rasterizerState": {
              "cullMode": 0
            },
            "properties": {
              "alphaThreshold": {
                "value": [
                  0.5
                ],
                "type": 13
              }
            },
            "program": "GraphicsRainbow|vs|fs"
          }
        ]
      }
    ],
    "shaders": [
      {
        "hash": 2274072029,
        "glsl3": {
          "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\nin float a_dist;\nout float v_dist;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * cc_matWorld * pos;\n  v_color = a_color;\n  v_dist = a_dist;\n  gl_Position = pos;\n}",
          "frag": "\n#if CC_SUPPORT_standard_derivatives\n  #extension GL_OES_standard_derivatives : enable\n#endif\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nin vec4 v_color;\nin float v_dist;\nvec3 Pallete(float t) {\n  t += cc_time.x;\n  vec3 dcOffset = vec3(0.5, 0.5, 0.5);\n  vec3 amp = vec3(1., 1., 1.);\n  vec3 freq = vec3(1., 1., 1.);\n  vec3 phase = vec3(0., 0.3333, 0.6666);\n  return dcOffset + amp * cos(2. * 3.14159 * (freq * t + phase));\n}\nvoid main () {\n  vec4 o = v_color;\n  ALPHA_TEST(o);\n  #if CC_SUPPORT_standard_derivatives\n    float aa = fwidth(v_dist);\n  #else\n    float aa = 0.05;\n  #endif\n  float alpha = smoothstep(aa, -aa, abs(v_dist) - 1.0);\n  float D = v_dist * 0.5 + 0.5;\n  o.rgb = Pallete(D);\n  o.rgb *= alpha;\n  gl_FragColor = o;\n}"
        },
        "glsl1": {
          "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\nattribute float a_dist;\nvarying float v_dist;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * cc_matWorld * pos;\n  v_color = a_color;\n  v_dist = a_dist;\n  gl_Position = pos;\n}",
          "frag": "\n#if CC_SUPPORT_standard_derivatives\n  #extension GL_OES_standard_derivatives : enable\n#endif\nprecision highp float;\nuniform vec4 cc_time;\n#if USE_ALPHA_TEST\n  uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nvarying vec4 v_color;\nvarying float v_dist;\nvec3 Pallete(float t) {\n  t += cc_time.x;\n  vec3 dcOffset = vec3(0.5, 0.5, 0.5);\n  vec3 amp = vec3(1., 1., 1.);\n  vec3 freq = vec3(1., 1., 1.);\n  vec3 phase = vec3(0., 0.3333, 0.6666);\n  return dcOffset + amp * cos(2. * 3.14159 * (freq * t + phase));\n}\nvoid main () {\n  vec4 o = v_color;\n  ALPHA_TEST(o);\n  #if CC_SUPPORT_standard_derivatives\n    float aa = fwidth(v_dist);\n  #else\n    float aa = 0.05;\n  #endif\n  float alpha = smoothstep(aa, -aa, abs(v_dist) - 1.0);\n  float D = v_dist * 0.5 + 0.5;\n  o.rgb = Pallete(D);\n  o.rgb *= alpha;\n  gl_FragColor = o;\n}"
        },
        "builtins": {
          "globals": {
            "blocks": [
              {
                "name": "CCGlobal",
                "defines": []
              }
            ],
            "samplers": []
          },
          "locals": {
            "blocks": [
              {
                "name": "CCLocal",
                "defines": []
              }
            ],
            "samplers": []
          }
        },
        "defines": [
          {
            "name": "CC_SUPPORT_standard_derivatives",
            "type": "boolean",
            "defines": []
          },
          {
            "name": "USE_ALPHA_TEST",
            "type": "boolean",
            "defines": []
          }
        ],
        "blocks": [
          {
            "name": "ALPHA_TEST",
            "members": [
              {
                "name": "alphaThreshold",
                "type": 13,
                "count": 1
              }
            ],
            "defines": [
              "USE_ALPHA_TEST"
            ],
            "binding": 0
          }
        ],
        "samplers": [],
        "record": null,
        "name": "GraphicsRainbow|vs|fs"
      }
    ]
  },
  {
    "__type__": "cc.SpriteFrame",
    "content": {
      "name": "light",
      "texture": "b6OKIJuUpHX47J4j+/sCs4",
      "rect": [
        12,
        0,
        35,
        57
      ],
      "offset": [
        -0.5,
        1.5
      ],
      "originalSize": [
        60,
        60
      ],
      "capInsets": [
        0,
        0,
        0,
        0
      ]
    }
  },
  {
    "__type__": "cc.SpriteFrame",
    "content": {
      "name": "default_btn_pressed",
      "texture": "b4P/PCArtIdIH38t6mlw8Y",
      "rect": [
        0,
        0,
        40,
        40
      ],
      "offset": [
        0,
        0
      ],
      "originalSize": [
        40,
        40
      ],
      "capInsets": [
        12,
        12,
        12,
        12
      ]
    }
  },
  {
    "__type__": "cc.EffectAsset",
    "_name": "GraphicsFake3D",
    "techniques": [
      {
        "passes": [
          {
            "blendState": {
              "targets": [
                {
                  "blend": true,
                  "blendSrc": 1,
                  "blendDst": 771,
                  "blendSrcAlpha": 1,
                  "blendDstAlpha": 771
                }
              ]
            },
            "rasterizerState": {
              "cullMode": 0
            },
            "properties": {
              "alphaThreshold": {
                "value": [
                  0.5
                ],
                "type": 13
              },
              "lightPos": {
                "value": [
                  1,
                  -1
                ],
                "type": 14
              },
              "lineWidth": {
                "value": [
                  40
                ],
                "type": 13
              }
            },
            "program": "GraphicsFake3D|vs|fs"
          }
        ]
      }
    ],
    "shaders": [
      {
        "hash": 3132561939,
        "glsl3": {
          "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\nin float a_dist;\nout float v_dist;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * cc_matWorld * pos;\n  v_color = a_color;\n  v_dist = a_dist;\n  gl_Position = pos;\n}",
          "frag": "\n#if CC_SUPPORT_standard_derivatives\n  #extension GL_OES_standard_derivatives : enable\n#endif\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nin vec4 v_color;\nin float v_dist;\nuniform UARGS {\n  vec2 lightPos;\n  float lineWidth;\n};\nvoid main () {\n  vec4 o = v_color;\n  float maxDist = lineWidth / 4.;\n  float D = abs(v_dist) * 2.0 - 1.0;\n  D *= -maxDist;\n  float aastep = fwidth(D);\n  float aaMask = smoothstep(-aastep, aastep, abs(D) - 1.0);\n  vec2 delta = vec2(dFdx(D), dFdy(D));\n  float brightNess = dot(normalize(delta), normalize(-lightPos));\n  brightNess = clamp(brightNess, 0.15, 0.85);\n  float w = maxDist / 2.;\n  float edgeMask = smoothstep(aastep, -aastep, abs(D + w) - w);\n  float insideMask = smoothstep(-aastep, aastep, D);\n  vec3 color = vec3(brightNess * edgeMask) + vec3(1.0) * insideMask;\n  color *= vec3(1., 213./255., 0.);\n  float finalMask = (edgeMask + insideMask);\n  gl_FragColor = vec4(color * finalMask, finalMask);\n}"
        },
        "glsl1": {
          "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\nattribute float a_dist;\nvarying float v_dist;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * cc_matWorld * pos;\n  v_color = a_color;\n  v_dist = a_dist;\n  gl_Position = pos;\n}",
          "frag": "\n#if CC_SUPPORT_standard_derivatives\n  #extension GL_OES_standard_derivatives : enable\n#endif\nprecision highp float;\n#if USE_ALPHA_TEST\n#endif\nvarying vec4 v_color;\nvarying float v_dist;\nuniform vec2 lightPos;\nuniform float lineWidth;\nvoid main () {\n  vec4 o = v_color;\n  float maxDist = lineWidth / 4.;\n  float D = abs(v_dist) * 2.0 - 1.0;\n  D *= -maxDist;\n  float aastep = fwidth(D);\n  float aaMask = smoothstep(-aastep, aastep, abs(D) - 1.0);\n  vec2 delta = vec2(dFdx(D), dFdy(D));\n  float brightNess = dot(normalize(delta), normalize(-lightPos));\n  brightNess = clamp(brightNess, 0.15, 0.85);\n  float w = maxDist / 2.;\n  float edgeMask = smoothstep(aastep, -aastep, abs(D + w) - w);\n  float insideMask = smoothstep(-aastep, aastep, D);\n  vec3 color = vec3(brightNess * edgeMask) + vec3(1.0) * insideMask;\n  color *= vec3(1., 213./255., 0.);\n  float finalMask = (edgeMask + insideMask);\n  gl_FragColor = vec4(color * finalMask, finalMask);\n}"
        },
        "builtins": {
          "globals": {
            "blocks": [
              {
                "name": "CCGlobal",
                "defines": []
              }
            ],
            "samplers": []
          },
          "locals": {
            "blocks": [
              {
                "name": "CCLocal",
                "defines": []
              }
            ],
            "samplers": []
          }
        },
        "defines": [
          {
            "name": "CC_SUPPORT_standard_derivatives",
            "type": "boolean",
            "defines": []
          },
          {
            "name": "USE_ALPHA_TEST",
            "type": "boolean",
            "defines": []
          }
        ],
        "blocks": [
          {
            "name": "ALPHA_TEST",
            "members": [
              {
                "name": "alphaThreshold",
                "type": 13,
                "count": 1
              }
            ],
            "defines": [
              "USE_ALPHA_TEST"
            ],
            "binding": 0
          },
          {
            "name": "UARGS",
            "members": [
              {
                "name": "lightPos",
                "type": 14,
                "count": 1
              },
              {
                "name": "lineWidth",
                "type": 13,
                "count": 1
              }
            ],
            "defines": [],
            "binding": 1
          }
        ],
        "samplers": [],
        "record": null,
        "name": "GraphicsFake3D|vs|fs"
      }
    ]
  },
  {
    "__type__": "cc.SpriteFrame",
    "content": {
      "name": "default_btn_normal",
      "texture": "e8Ueib+qJEhL6mXAHdnwbi",
      "rect": [
        0,
        0,
        40,
        40
      ],
      "offset": [
        0,
        0
      ],
      "originalSize": [
        40,
        40
      ],
      "capInsets": [
        12,
        12,
        12,
        12
      ]
    }
  },
  {
    "__type__": "cc.Material",
    "_name": "GraphicsRainbow",
    "_effectAsset": {
      "__uuid__": "d539/mDthJOLMsKcisuKyo"
    },
    "_techniqueData": {
      "0": {
        "defines": {}
      }
    }
  }
]